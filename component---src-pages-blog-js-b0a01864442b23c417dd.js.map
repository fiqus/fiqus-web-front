{"version":3,"file":"component---src-pages-blog-js-b0a01864442b23c417dd.js","mappings":"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","sources":["webpack://fiqus-web/./src/components/modules/PostThumbnail.js","webpack://fiqus-web/./src/pages/blog.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\nimport data from '../../content/content.json'\r\nimport { useIntl, Link } from \"gatsby-plugin-react-intl\"\r\nimport Button from '../common/Button'\r\nimport Img from \"gatsby-image\"\r\n\r\nconst styles = data.styles\r\n\r\nconst PostThumbnailWrapper = styled.div`\r\n    margin-bottom: 50px;\r\n    max-width: 320px;\r\n    flex-basis: 100%;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        max-width: 351px;\r\n    }\r\n    @media (min-width: ${styles.breakpoints.l}px) {\r\n        flex-basis: 33%;\r\n        min-width: 300px;\r\n        max-width: 300px;\r\n        margin-bottom: 55px;\r\n    }\r\n` \r\n\r\nconst PostThumbnailImage = styled(Link)`\r\n    display: block;\r\n    border-radius: 6px;\r\n    margin-bottom: 10px;\r\n    height: 230px;\r\n    max-width: 320px;\r\n    overflow: hidden;\r\n    @media (min-width: ${styles.breakpoints.l}px) {\r\n        height: 215px;\r\n        margin-bottom: 15px;\r\n    }\r\n`\r\nconst Image = styled(Img) `\r\n    height: 100%;\r\n`\r\nconst PostThumbnailTitle = styled(Link)`\r\n    display: block;\r\n    font-size: 1.16em;\r\n    line-height: 27px;\r\n    color: ${styles.colors.darkMainBg};\r\n    text-decoration: none;\r\n    margin-bottom: 10px;  \r\n    @media (min-width: ${styles.breakpoints.l}px) {\r\n        font-weight: ${styles.fontWeight.bold};\r\n        margin-bottom: 8px;\r\n    }\r\n`\r\nconst PostThumbnailDescription =styled.p`\r\n    font-size: .88em;\r\n    line-height: 20px;\r\n    margin-bottom: 20px;\r\n    color: ${styles.colors.darkGrey};\r\n    @media (min-width: ${styles.breakpoints.l}px) {\r\n        margin-bottom: 15px;\r\n    }\r\n`\r\nconst BtnContainer =  styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\nconst Btn =  styled(Button)`\r\n    font-size: .88em;\r\n    margin: 0;\r\n    padding: 6px 12px;\r\n    box-shadow: none;\r\n    border-radius: 10px;\r\n    &:hover {\r\n        box-shadow: 0px 3px 0px ${styles.colors.lightGrey};\r\n    }\r\n    @media (min-width: ${styles.breakpoints.l}px) {\r\n        font-size: .77em;\r\n        padding: 7px 15px;\r\n    }\r\n`\r\n\r\nconst PostThumbnail = (props) => {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <PostThumbnailWrapper>\r\n            <PostThumbnailImage to={props.shortSlug}> \r\n                <Image\r\n                    fluid = {props.fluid}\r\n                    alt=\"\"\r\n                />\r\n            </PostThumbnailImage>\r\n            <PostThumbnailTitle to={props.shortSlug}>{props.postTitle}</PostThumbnailTitle>\r\n            <PostThumbnailDescription>{props.postDescription}</PostThumbnailDescription>\r\n            <BtnContainer>\r\n                <Btn\r\n                  type='btnSecondary'\r\n                  theme={styles}\r\n                  isLink\r\n                  href={props.slug}\r\n                  btnText='leer'\r\n                />\r\n            </BtnContainer>\r\n        </PostThumbnailWrapper>\r\n    );\r\n};\r\n\r\nexport default PostThumbnail;","import React, { useState, useEffect, Fragment }  from 'react'\r\nimport { graphql } from 'gatsby';\r\nimport styled from 'styled-components'\r\nimport data from '../content/content.json'\r\nimport { useIntl } from \"gatsby-plugin-react-intl\"\r\n\r\nimport Button from '../components/common/Button'\r\nimport PostThumbnail from '../components/modules/PostThumbnail'\r\n\r\nconst styles = data.styles\r\n\r\nconst MainWrapper = styled.div`\r\n  padding-bottom: 180px;\r\n  @media (min-width: ${styles.breakpoints.m}px) {\r\n    padding-bottom: 228px;\r\n  }\r\n`\r\nconst PostsContainer = styled.div`\r\n  padding: 40px 20px 0 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  @media (min-width: ${styles.breakpoints.lpx}) {\r\n    padding-top: 55px;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n  }\r\n`\r\nconst PostsWrapper = styled.div`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin: auto;\r\n    gap: 10px;\r\n    padding: 0;\r\n    max-width: 946px;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n      justify-content: flex-start;\r\n      margin: auto;\r\n      gap: 23px;\r\n      padding: 0;\r\n    }\r\n    @media (min-width: ${styles.breakpoints.l}px) {\r\n     width: 946px;\r\n    }\r\n  }\r\n`\r\nconst BlogTitle = styled.h1`\r\n  flex-basis: 100%;\r\n  font-size: 2.38em;\r\n  line-height: 49px;\r\n  color: ${styles.colors.purplePrimary};\r\n  margin: 0 auto 25px auto;\r\n  text-align: center;\r\n  @media (min-width: ${styles.breakpoints.m}px) {\r\n    text-align: left;\r\n    font-size: 3em;    \r\n    line-height: 62px;\r\n    margin-bottom: 35px;\r\n  }\r\n`\r\nconst Btn = styled(Button)`\r\n  margin: 0px auto 15px auto;\r\n`\r\n\r\n\r\nconst Blog = ({data: {allMarkdownRemark: { edges }}})  =>  {\r\n  const intl = useIntl();\r\n  const [currentPostsList, setCurrentPostsList] = useState([])\r\n  const [visiblePosts, setVisiblePosts] = useState([])\r\n  const [postsLimit, setPostsLimit] = useState(6)\r\n  const postsAdd = 6\r\n\r\n  useEffect( ()=>{\r\n    let tempPostsList = []\r\n\r\n    edges.forEach(edge => {\r\n      if(edge.node.frontmatter.lang === intl.locale){\r\n        tempPostsList.push(edge)\r\n      }\r\n    setCurrentPostsList([...tempPostsList])\r\n    });\r\n    setPostsLimit(2)\r\n    setVisiblePosts(currentPostsList.slice(0,3))\r\n  }, [])\r\n\r\n  useEffect (()=>{\r\n    setVisiblePosts(currentPostsList.slice(0,postsLimit))\r\n  }, [postsLimit])\r\n  \r\n  const showMorePosts = () => {\r\n    console.log(\"showMore\")\r\n    if(postsLimit<=currentPostsList.length){\r\n      setPostsLimit(postsLimit+postsAdd)\r\n      console.log(postsLimit)\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n      <MainWrapper>\r\n      <PostsContainer>\r\n        <PostsWrapper>\r\n            <BlogTitle>Blog</BlogTitle>\r\n\r\n            {visiblePosts.map( post => {\r\n                return(\r\n                  <PostThumbnail \r\n                    postTitle={post.node.frontmatter.title}\r\n                    postDescription={post.node.excerpt}\r\n                    fluid={post.node.frontmatter.image.childImageSharp.fluid}\r\n                    slug={`/${post.node.frontmatter.lang}/post${post.node.frontmatter.slug}`}\r\n                    shortSlug={`/post${post.node.frontmatter.slug}`}\r\n                  />\r\n                )\r\n            })}\r\n\r\n          </PostsWrapper>\r\n          <Btn\r\n            isLink={false}\r\n            type='btnPrimaryPurple'\r\n            theme={styles}\r\n            to=\"#\"\r\n            btnText='cargar más artículos'\r\n            onButtonClick = {showMorePosts}\r\n          />\r\n        </PostsContainer>\r\n    </MainWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Blog;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }, filter: {frontmatter: {type: {eq: \"post\"}}}) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 95)\r\n          frontmatter {\r\n            lang\r\n            type\r\n            title\r\n            author\r\n            slug\r\n            date\r\n            tags\r\n            image{\r\n              childImageSharp {\r\n                fluid(maxWidth: 800) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            imageCredits\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["styles","data","PostThumbnailWrapper","styled","breakpoints","m","l","PostThumbnailImage","Link","Image","Img","PostThumbnailTitle","colors","darkMainBg","fontWeight","bold","PostThumbnailDescription","darkGrey","BtnContainer","Btn","Button","lightGrey","props","useIntl","to","shortSlug","fluid","alt","postTitle","postDescription","type","theme","isLink","href","slug","btnText","MainWrapper","PostsContainer","lpx","PostsWrapper","BlogTitle","purplePrimary","edges","allMarkdownRemark","intl","useState","currentPostsList","setCurrentPostsList","visiblePosts","setVisiblePosts","postsLimit","setPostsLimit","useEffect","tempPostsList","forEach","edge","node","frontmatter","lang","locale","push","slice","map","post","title","excerpt","image","childImageSharp","onButtonClick","console","log","length"],"sourceRoot":""}