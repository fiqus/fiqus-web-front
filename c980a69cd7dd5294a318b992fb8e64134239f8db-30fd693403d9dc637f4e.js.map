{"version":3,"file":"c980a69cd7dd5294a318b992fb8e64134239f8db-30fd693403d9dc637f4e.js","mappings":"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","sources":["webpack://fiqus-web/./node_modules/gatsby-plugin-anchor-links/components/AnchorLink.js","webpack://fiqus-web/./node_modules/gatsby-plugin-anchor-links/index.js","webpack://fiqus-web/./src/components/common/Tags.js","webpack://fiqus-web/./src/components/modules/FeaturedService.js","webpack://fiqus-web/./src/components/modules/Service.js","webpack://fiqus-web/./src/pages/servicios.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnchorLink = AnchorLink;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _gatsby = require(\"gatsby\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nAnchorLink.propTypes = {\n  to: _propTypes[\"default\"].string.isRequired,\n  title: _propTypes[\"default\"].string,\n  className: _propTypes[\"default\"].string,\n  stripHash: _propTypes[\"default\"].bool,\n  gatsbyLinkProps: _propTypes[\"default\"].object,\n  onAnchorLinkClick: _propTypes[\"default\"].func,\n  children: _propTypes[\"default\"].node\n};\n\nfunction AnchorLink(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$stripHash = _ref.stripHash,\n      stripHash = _ref$stripHash === void 0 ? false : _ref$stripHash,\n      _ref$gatsbyLinkProps = _ref.gatsbyLinkProps,\n      gatsbyLinkProps = _ref$gatsbyLinkProps === void 0 ? {} : _ref$gatsbyLinkProps,\n      onAnchorLinkClick = _ref.onAnchorLinkClick;\n  var onClickHandler = stripHash ? _utils.handleStrippedLinkClick : _utils.handleLinkClick;\n\n  var linkProps = _objectSpread(_objectSpread({}, gatsbyLinkProps), {}, {\n    /**\n     * Spread optional gatsbyLinkProps object in fist, so our specific props will override\n     */\n    to: stripHash ? (0, _utils.stripHashedLocation)(to) : to,\n    onClick: function onClick(e) {\n      return onClickHandler(to, e, onAnchorLinkClick);\n    }\n  });\n  /**\n   * Optional props\n   */\n\n\n  if (title) linkProps.title = title;\n  if (className) linkProps.className = className;\n  return /*#__PURE__*/_react[\"default\"].createElement(_gatsby.Link, linkProps, children ? children : title);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnchorLink\", {\n  enumerable: true,\n  get: function get() {\n    return _AnchorLink.AnchorLink;\n  }\n});\n\nvar _AnchorLink = require(\"./components/AnchorLink\");","import React from 'react';\nimport styled from 'styled-components'\n\nconst TagsContainer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n`\nconst TagItem = styled.div`\n    margin: 0 6px 8px 0px;\n    padding: ${props => props.type.padding };\n    border-radius: 10px;\n    font-size: 14px;\n    font-weight: ${props => props.type.fontWeight };\n    background-color: ${props => props.type.background };\n    color: ${props => props.type.color };\n`\n\nconst Tags = (props) => {\n\n    const getTagStyles = (type) =>{\n        switch (type) {\n            case \"labs\" : \n                return {\n                    background : props.styles.colors.greenLight, \n                    fontWeight : props.styles.fontWeight.regular, \n                    color : props.styles.colors.ultraDarkGrey,\n                    padding : '9px 14px'\n                 }\n            break\n            case \"services\" : \n                return {\n                    background : props.styles.colors.purpleLight, \n                    fontWeight : props.styles.fontWeight.medium, \n                    color : props.styles.colors.purpleSecondary,\n                    padding : '8px 14px'\n                }\n            break\n            default : \n                return {\n                    background : props.styles.colors.greenLight, \n                    fontWeight : props.styles.fontWeight.regular, \n                    color : props.styles.colors.ultraDarkGrey,\n                    padding : '8px 14px'\n                }\n        }\n    }\n\n    return (\n        <TagsContainer tags={props.tags} type={props.tagsType}>\n            {props.tags.map((tag) => {\n                return (\n                    <TagItem  key = {tag}  type = {getTagStyles(props.tagsType)} styles={props.styles}><p>{ tag }</p></TagItem>\n                )}) \n            }\n        </TagsContainer>\n    );\n};\n\nexport default Tags;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components'\nimport { useIntl, Link } from \"gatsby-plugin-react-intl\"\nimport data from '../../content/content.json'\nimport {Waypoint} from 'react-waypoint'\nimport Lottie from 'react-lottie'\nimport { AnchorLink } from 'gatsby-plugin-anchor-links'\nimport capacitacionAnimation from '../../images/animations/capacitacion.json'\n\nconst styles = data.styles\n\nconst FeaturedServiceContainer = styled.div`\n    background: ${styles.colors.white};\n    position: relative;\n    min-height: 253px;\n    margin-bottom: 0px;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        min-height: 215px;\n        padding: 0 20px;\n    }\n    \n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            flex-basis: 100%;\n            max-width: 320px;\n            border-radius: 14px;\n            padding: 0px;\n            min-height: unset;\n            background: ${styles.colors.white};\n            margin: 0px;\n            @media (min-width: ${styles.breakpoints.m}px) {\n                position: static;\n                flex-basis: 50%;\n                max-width: 330px;\n                min-height: unset;\n                width: 100%;\n                margin: 0;\n                padding: 0;\n                border: none;\n                box-shadow: none;\n                &:hover {\n                    outline: solid 3px ${styles.colors.purplePrimary};\n                }\n            }\n            @media (min-width: ${styles.breakpoints.l}px) {\n                flex-basis: 33.33%;\n            }\n            `\n        }\n    }}\n`\nconst FeaturedServiceLink = styled(AnchorLink)`\n    width: 100%;\n    height: 100%;\n    padding: 18px 20px 22px 20px;\n    text-decoration: none;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        padding: 15px 20px 25px 20px;\n    }\n\n`\nconst FeaturedServiceWrapper = styled.div`\n    position: relative;\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin: auto; \n    margin-top: -200px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    max-width: 320px;\n    padding: 46px 22px 33px 22px;\n    background: ${styles.colors.white};\n    border: 2px solid ${styles.colors.purplePrimary};\n    border-radius: 14px;\n    box-shadow: 0px 6px 0px ${styles.colors.purplePrimary};\n    @media (min-width: ${styles.breakpoints.m}px) {\n        max-width: 946px;\n        width: calc(100% - 40px);\n        flex-direction: row;\n        align-items: flex-start;;\n        margin: 87px auto 80px auto;\n        margin-top: -155px;\n        padding: 0;\n        background: ${styles.colors.transparent};\n        border: 0;\n        box-shadow: none;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            position: static;\n            max-width: 320px;\n            margin: auto;\n            box-shadow: none;\n            border: none;\n            background: ${styles.colors.unset};\n            margin-top: 0px;\n            padding: 0px;\n            \n            @media (min-width: ${styles.breakpoints.m}px) {\n                max-width: unset;\n                width: 100%;\n                height: 100%;\n                box-shadow: none;\n                margin: 0;\n                border: none;\n                background: ${styles.colors.unset};\n                flex-direction: column;\n                align-items: center;\n            }\n            `\n        }\n    }}\n`\nconst ImageContainer = styled.div`\n    @media (min-width: ${styles.breakpoints.m}px) {\n        position: relative;\n        width: 387px;\n        max-width: 387px;\n        padding: 43px 74px 52px 55px;\n        margin-bottom: 50px;\n        background: ${styles.colors.white};\n        border: 3px solid ${styles.colors.purplePrimary};\n        border-radius: 14px;\n        box-shadow: 12px 12px 0px ${styles.colors.purplePrimary};\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            @media (min-width: ${styles.breakpoints.m}px) {\n                position: static;\n                width: unset;\n                max-width: unset;\n                padding: unset;\n                margin-bottom: unset;\n                background: unset;\n                border: none;\n                border-radius: unset;\n                box-shadow: none;\n            }\n            `\n        }\n    }}\n`\nconst FeaturedServiceImage = styled.div`\n    max-width: 210px;\n    margin-bottom: 27px;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        max-width: 258px;\n        margin-bottom: 0;\n        margin: 0 auto;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            max-height: 120px;\n            max-width: 100%;\n            max-height: 160px;\n            margin-bottom: 0;\n            @media (min-width: ${styles.breakpoints.m}px) {\n                max-height: 175px;\n            }\n            `\n        }\n    }}\n`\nconst InfoContainer = styled.div`\n    width: unset;\n    right: 0;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        position: absolute;\n        top: 65px;\n        right: 20px;\n        z-index: 2;\n        width: 100%;\n        padding: 49px 47px 44px 47px;\n        background: ${styles.colors.white};\n        border: 3px solid ${styles.colors.purplePrimary};\n        border-radius: 14px;\n        box-shadow: 12px 12px 0px ${styles.colors.purplePrimary};\n    }\n    @media (min-width: ${styles.breakpoints.m}px) and (max-width: 875px) {\n        max-width: 450px;\n    }\n    @media (min-width: 876px) and (max-width: 925px) {\n        max-width: 500px;\n    }\n    @media (min-width: 926px) {\n        max-width: 600px;\n    }   \n    @media (min-width: ${styles.breakpoints.l}px) {\n        width: unset;\n        padding: 49px 47px 44px 86px;\n        right: 0;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            @media (min-width: ${styles.breakpoints.m}px) {\n                position: static;\n                top: unset;\n                right: unset;\n                z-index: unset;\n                width: unset;\n                max-width: unset;\n                padding: unset;\n                background: unset;\n                border: none;\n                border-radius: unset;\n                box-shadow: none;\n            }\n            `\n        }\n    }}\n`\nconst FeaturedServiceTitle = styled.h3`\n    font-size: 1.44em;\n    margin-bottom: 11px;\n    color: ${styles.colors.orangeMain};\n    text-align: center;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        margin-bottom: 20px;\n        font-size: 2.1em;\n        text-align: left;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            color: ${styles.colors.purplePrimary};\n            margin-bottom: 0;\n            margin: 10px 0 0 0;\n            @media (min-width: ${styles.breakpoints.m}px) {\n                color: ${styles.colors.purplePrimary};\n                font-size: 1.44em;\n                text-align: center;\n                margin: 10px 0 0 0;\n            }\n            `\n        }\n    }}\n`\nconst FeaturedServiceDescription = styled.p`\n    max-width: 463px;\n    font-size: .88em;\n    line-height: 22px;\n    color: ${styles.colors.darkMainBg};\n    @media (min-width: ${styles.breakpoints.m}px) {\n        display: block;\n        margin-bottom: auto;\n        font-size: 1em;\n        line-height: 1.44em;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            display: none;\n            margin-left: 0!important;\n            @media (min-width: ${styles.breakpoints.m}px) {\n                display: none;\n                margin-left: 0!important;\n            }\n            `\n        }\n    }}\n`\n\nconst FeaturedService = (props) => {\n    const [renderLottie, setRenderLottie] = useState(false)\n    const [pauseAnimation, setPauseAnimation] = useState(true)\n    const intl = useIntl();\n\n    useEffect(() => {\n        setPauseAnimation(renderLottie)\n    }, [renderLottie])\n\n    const startLottie = () => {\n        setPauseAnimation(false)\n    }\n\n    const pauseLottie = () => {\n        setPauseAnimation(true)\n    }\n\n    const animationOptions= {\n        loop: true,\n        autoplay: false,\n        animationData: capacitacionAnimation,\n        rendererSettings: {\n          preserveAspectRatio: \"xMidYMid slice\"\n        }\n    }\n\n    return (\n        props.ishomepage ? \n        <FeaturedServiceContainer ishomepage={props.ishomepage} onMouseEnter={startLottie} onMouseLeave={pauseLottie}> \n            <FeaturedServiceWrapper ishomepage={props.ishomepage}> \n                <FeaturedServiceLink\n                    ishomepage={props.ishomepage}\n                    to='/servicios/#capacitacion'\n                >\n                    <ImageContainer ishomepage={props.ishomepage}>\n                        <FeaturedServiceImage\n                            alt={intl.formatMessage({id: \"service_subsection.featuredServiceImageAlt\"})}\n                            ishomepage={props.ishomepage}\n                        >\n\n                            <Lottie\n                                options = {animationOptions}\n                                width = \"100%\"\n                                isPaused={pauseAnimation}\n                            />\n                        </FeaturedServiceImage>\n                    </ImageContainer>\n                    <InfoContainer ishomepage={props.ishomepage}>\n                            <FeaturedServiceTitle ishomepage={props.ishomepage}>{intl.formatMessage({id: \"service_subsection.title\"})}</FeaturedServiceTitle>\n                            <FeaturedServiceDescription ishomepage={props.ishomepage}>{intl.formatMessage({id: \"service_subsection.description\"})}</FeaturedServiceDescription>\n                    </InfoContainer>\n                </FeaturedServiceLink>\n            </FeaturedServiceWrapper>\n        </FeaturedServiceContainer>\n        :\n        <FeaturedServiceContainer ishomepage={props.ishomepage}> \n            <FeaturedServiceWrapper id=\"capacitacion\" ishomepage={props.ishomepage}>\n                    <Waypoint onEnter={() => { setRenderLottie(true) }} onLeave={()=>{setRenderLottie(false)}} />\n                <ImageContainer ishomepage={props.ishomepage}>\n                    <FeaturedServiceImage\n                        alt={intl.formatMessage({id: \"service_subsection.featuredServiceImageAlt\"})}\n                        ishomepage={props.ishomepage}>\n                        <Lottie\n                            options = {animationOptions}\n                            width = \"100%\"\n                            isPaused={pauseAnimation}\n                        />\n                    </FeaturedServiceImage>\n                </ImageContainer>\n                <InfoContainer ishomepage={props.ishomepage}>\n                        <FeaturedServiceTitle ishomepage={props.ishomepage}>{intl.formatMessage({id: \"service_subsection.title\"})}</FeaturedServiceTitle>\n                        <FeaturedServiceDescription ishomepage={props.ishomepage}>{intl.formatMessage({id: \"service_subsection.description\"})}</FeaturedServiceDescription>\n                </InfoContainer>\n            </FeaturedServiceWrapper>\n        </FeaturedServiceContainer>\n    );\n};\n\nexport default FeaturedService;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components'\nimport data from '../../content/content.json'\nimport Tags from '../common/Tags'\nimport Button from '../common/Button'\nimport { useIntl, Link } from \"gatsby-plugin-react-intl\"\nimport Lottie from 'react-lottie';\nimport { Waypoint } from 'react-waypoint';\nimport { AnchorLink } from 'gatsby-plugin-anchor-links'\n\nimport datosAnimation from '../../images/animations/datos.json'\nimport blockchainAnimation from '../../images/animations/blockchain.json'\nimport fullstackAnimation from '../../images/animations/fullstack.json'\nimport iaAnimation from '../../images/animations/inteligenciaArtificial.json'\nimport acAnimation from '../../images/animations/altaConcurrencia.json'\n\nconst styles = data.styles\n\nconst ServiceWrapper = styled.div`\n    background: ${styles.colors.white};    \n    border-radius: 14px;\n    display: flex;\n    flex-direction: column;\n    max-width: 320px;\n    padding: 20px 20px 30px 20px;\n    margin-top: 0px;\n    margin-bottom: 30px;\n    margin-left: auto;\n    margin-right: auto;\n    min-width: unset;\n    flex-basis: 100%;\n    &:last-of-type {\n        margin-bottom: 61px;\n        ${props => {\n        if (props.ishomepage) {\n            return ` \n                margin-bottom: 30px;\n                `\n        }\n    }}\n    }\n    @media (min-width: ${styles.breakpoints.m}px) {\n        flex-direction: row;\n        padding: 30px 45px 30px 67px;\n        max-width: 946px;\n        &:last-of-type {\n            margin-bottom: 87px;\n        }\n    }\n    \n    ${props => {\n        if (props.ishomepage) {\n            return `\n            display: flex!important;   \n            flex-direction: column!important;\n            padding: 0;\n            margin-bottom: 0;\n            margin: 0;\n            @media (min-width: ${styles.breakpoints.m}px) {\n                min-width: 330px;                \n                margin-bottom: 50px;\n                padding: 0;\n                &:last-of-type {\n                    margin-bottom: 0px;\n                }\n                min-width: unset;\n                max-width: 330px; \n                flex-basis: 50%;\n                margin: 0;\n                &:hover {\n                    outline: solid 3px ${styles.colors.purplePrimary};\n                }\n                @media (min-width: ${styles.breakpoints.l}px) {\n                    flex-basis: 33.33%;\n                }\n            }\n            `\n        }\n    }}\n\n`\nconst ServiceLink = styled(AnchorLink)`\n    padding: 18px 20px 22px 20px;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        padding: 15px 20px 25px 20px;\n    }\n    width: 100%;\n    text-decoration: none; \n`\nconst LeftBlock = styled.div`\n    order: 3;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        display: flex;\n        order: unset;\n        flex-direction: column;\n        flex-basis: 45%;\n        align-items: flex-start;        \n        margin-right: 3px;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return `       \n            margin-right: 0px!important;\n            `\n        }\n    }}\n`\nconst RightBlock = styled.div`\n    order: 2;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        display: flex;\n        order: unset;\n        flex-direction: column;\n        flex-basis: 60%;\n        margin-left: 40px;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            margin-left: 0!important;\n            `\n        }\n    }}\n`\n\nconst TextContainer = styled.div`\n`\nconst ServiceTitle = styled.h3`\n    font-size: 1.44em;\n    color: ${styles.colors.purplePrimary};\n    margin: 0px 0px 18px 0;\n    text-align: center;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        font-size: 2.11em;\n        text-align: left;\n        padding-top: 8px;\n        margin-top: 0;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            margin-bottom: 0;\n            padding-top: 0!important;\n            font-size: 1.44em!important;\n            text-align: center!important;\n            margin-top: 0;\n            @media (min-width: ${styles.breakpoints.m}px) {\n                margin-top: 30px!important;\n                margin-top: 10px!important;\n            }\n            `\n        }\n    }}\n`\nconst ServiceDescription = styled.p`\n    font-size: 0.88em;\n    line-height: 22px;\n    color: ${styles.colors.darkMainBg};\n    margin-bottom: 25px;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        font-size: 1em;\n        line-height: 26px;\n        margin-bottom: auto;\n        padding-bottom: 35px;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            display: none;\n            `\n        }\n    }}\n`\n\nconst TagsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: auto;\n    margin-bottom: 15px;\n    margin-bottom: 0;\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            display: none!important;\n            `\n        }\n    }}\n`\nconst TagsTitle = styled.h4`\n    font-size: 0.88em;\n    color: ${styles.colors.purplePrimary};\n    margin-bottom: 23px;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        font-size: 1em;\n        line-height: 24px;\n        margin-bottom: 15px;\n        margin-top: 25px;\n    }\n`\nconst ImageContainer = styled.div`\n    display: none;\n    max-width: 200px;\n    margin: auto;\n    order: 1;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        order: unset;\n        margin-left: 0;\n        margin-right: auto;\n        margin-bottom: auto;\n        margin-bottom: 0;\n        margin-top: 0;\n        max-width: 330px;\n        width: 100%;\n        display: flex;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            margin-left: auto!important;\n            `\n        }\n    }}\n`\nconst Tag = styled(Tags)`\n`\n\nconst ImageContainerMobile = styled.div`\n    display: flex;\n    max-width:290px;\n    margin: auto;\n    order: 1;\n    display: flex;\n    margin-bottom: 0px;\n    margin-top: 0;\n    //max-width: unset!important;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        display: none;\n        order: unset;\n        margin-left: 0;\n        margin-right: auto;\n        margin-bottom: auto;\n        margin-top: 0;\n    }\n`\nconst ServiceImage = styled.div`\n    pointer-events: none;\n    width: 100%;\n    max-height: 170px;\n    text-align: center;\n\n    @media (min-width: ${styles.breakpoints.m}px) {\n        max-height: 300px;\n        div svg {\n            height: auto;\n            width: 100%!important;\n            max-height: 300px!important;\n        }\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return `\n            max-height: 160px;\n            div {\n             height: 100%;\n             width: 100%!important;   \n            }\n            @media (min-width: ${styles.breakpoints.m}px) {\n                max-height: 134px;\n                max-height: 175px;\n            }\n            div svg {\n             width: auto!important;   \n            }\n            `\n        }\n    }}\n`\n\nconst BtnMobile = styled(Button)`\n        margin-top: 26px!important;\n        display: none;\n        display: flex;\n        margin-left: 0;\n        max-width: max-content;\n        /*\n        Este componente no se muestra porque todavía no está lista la landing page de cada servicio. \n        Cuando estén listas hay que comentar o eliminar únicamente el display none que está debajo de este comentario.\n        */\n        display: none;\n        \n    @media (min-width: ${styles.breakpoints.m}px) {\n        display: none;\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            display: none;\n            `\n        }\n    }}\n`\nconst Btn = styled(Button)`\n    display: none;\n    max-width: max-content;\n    @media (min-width: ${styles.breakpoints.m}px) {\n        margin-top: auto!important;\n        margin-bottom: 35px;\n        display: flex;\n        display: flex;\n        /*\n        Este componente no se muestra porque todavía no está lista la landing page de cada servicio.\n        Cuando estén listas hay que comentar o eliminar únicamente el display none que está debajo de este comentario.\n        */\n        display: none;\n        ${props => {\n        if (props.ishomepage) {\n            return ` \n                display: none;\n                `\n        }\n    }}\n    }\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            display: none;\n            `\n        }\n    }}\n`\n\nconst Service = (props) => {\n    const [pauseAnimation, setPauseAnimation] = useState(true)\n    const [renderLottie, setRenderLottie] = useState(false)\n    const service = props.service;\n    const intl = useIntl();\n\n    const getServiceAnimation = (service) => {\n        switch (service) {\n            case \"datos\":\n                return datosAnimation\n            case \"blockchain\":\n                return blockchainAnimation\n            case \"fullstack\":\n                return fullstackAnimation\n            case \"inteligenciaArtificial\":\n                return iaAnimation\n            case \"altaConcurrencia\":\n                return acAnimation\n            default:\n                return \"\"\n        }\n    }\n\n    useEffect(() => {\n        setPauseAnimation(renderLottie)\n    }, [renderLottie])\n\n    useEffect(()=>{\n\n    }, [props.ishomepage])\n\n    const getAnimationOptions = (service) => {\n        return {\n            loop: true,\n            autoplay: false,\n            animationData: getServiceAnimation(service),\n            rendererSettings: {\n                preserveAspectRatio: \"xMidYMid slice\"\n            }\n        }\n    }\n\n    const startLottie = () => {\n        setPauseAnimation(false)\n    }\n\n    const pauseLottie = () => {\n        setPauseAnimation(true)\n    }\n\n    return (\n        props.ishomepage ?\n            <ServiceWrapper ishomepage={props.ishomepage} onMouseEnter={startLottie} onMouseLeave={pauseLottie}>\n                <ServiceLink\n                    ishomepage={props.ishomepage}\n                    theme={styles}\n                    /*\n                    Cuando estén listas las landings individuales de cada servicio hay que descomentar este atributo, comentar el que está debajo (to='servicios') y\n                    reemplazar service.link en los archivos de idiomas con el link que corresponda.\n                    \n                    to={'/' + intl.formatMessage({id: `${props.id}.link`})}\n                    */\n                    to={`servicios/#${service.image}`}\n                >\n                    <ImageContainerMobile>\n                    <Waypoint onEnter={() => { setRenderLottie(true) }} onLeave={()=>{setRenderLottie(false)}} />\n                        <ServiceImage\n                            ishomepage={props.ishomepage}>\n                            <Lottie\n                                options={getAnimationOptions(props.service.image)}\n                                width=\"70%\"\n                            />\n                        </ServiceImage>\n                    </ImageContainerMobile>\n                    <LeftBlock ishomepage={props.ishomepage}>\n                        <ImageContainer ishomepage={props.ishomepage}>\n                            <ServiceImage ishomepage={props.ishomepage}>\n                                <Lottie\n                                    options={getAnimationOptions(props.service.image)}\n                                    isPaused={pauseAnimation}\n\n                                    width=\"100%\"\n                                />\n                            </ServiceImage>\n                        </ImageContainer>\n                        <TagsContainer ishomepage={props.ishomepage}>\n                            <TagsTitle>{intl.formatMessage({ id: \"services.tagsTitle\" })}</TagsTitle>\n                            <Tag\n                                tagsType=\"services\"\n                                tags={service.tags}\n                                styles={props.styles}\n                            />\n                        </TagsContainer>\n                        {/*                         <BtnMobile\n                            ishomepage={props.ishomepage}\n                            type='btnPrimaryPurple'\n                            theme={styles}\n                            //href={intl.formatMessage({id: `${props.id}.link`})}\n                            href='servicios'\n                            isLink\n                            btnText={intl.formatMessage({ id: \"button.verMas\" })}\n                        /> */}\n                    </LeftBlock>\n                    <RightBlock ishomepage={props.ishomepage}>\n                        <TextContainer>\n                            <ServiceTitle ishomepage={props.ishomepage}>{intl.formatMessage({ id: `${props.id}.service` })}</ServiceTitle>\n                            <ServiceDescription ishomepage={props.ishomepage}>{intl.formatMessage({ id: `${props.id}.description` })}</ServiceDescription>\n                        </TextContainer>\n                        {/*                         <Btn\n                            ishomepage={props.ishomepage}\n                            type='btnPrimaryPurple'\n                            theme={styles}\n                            href={intl.formatMessage({ id: `${props.id}.link` })}\n                            isLink\n                            btnText={intl.formatMessage({ id: \"button.verMas\" })}\n                        /> */}\n                    </RightBlock>\n                </ServiceLink>\n            </ServiceWrapper>\n            :\n            <ServiceWrapper id={service.image} ishomepage={props.ishomepage}>\n                <Waypoint onEnter={() => { setRenderLottie(true) }} onLeave={()=>{setRenderLottie(false)}} />\n                <ImageContainerMobile>\n                    <ServiceImage\n                        ishomepage={props.ishomepage}>\n                        <Lottie\n                            options={getAnimationOptions(props.service.image)}\n                            width=\"70%\"\n                        />\n                    </ServiceImage>\n                </ImageContainerMobile>\n                <LeftBlock>\n                    <ImageContainer ishomepage={props.ishomepage}>\n                        <ServiceImage\n                            ishomepage={props.ishomepage}>\n                            <Lottie\n                                options={getAnimationOptions(props.service.image)}\n                                width=\"70%\"\n                            />\n                        </ServiceImage>\n                    </ImageContainer>\n                    <TagsContainer ishomepage={props.ishomepage}>\n                        <TagsTitle>{intl.formatMessage({ id: \"services.tagsTitle\" })}</TagsTitle>\n                        <Tag\n                            tagsType=\"services\"\n                            tags={service.tags}\n                            styles={props.styles}\n                        />\n                    </TagsContainer>\n                    <BtnMobile\n                        type='btnPrimaryPurple'\n                        theme={styles}\n                        href={intl.formatMessage({ id: `${props.id}.link` })}\n                        btnText={intl.formatMessage({ id: \"button.verMas\" })}\n                        ishomepage={props.ishomepage}\n                        isLink\n                    />\n                </LeftBlock>\n                <RightBlock ishomepage={props.ishomepage}>\n                    <TextContainer>\n                        <ServiceTitle ishomepage={props.ishomepage}>{intl.formatMessage({ id: `${props.id}.service` })}</ServiceTitle>\n                        <ServiceDescription ishomepage={props.ishomepage}>{intl.formatMessage({ id: `${props.id}.description` })}</ServiceDescription>\n                    </TextContainer>\n                    <Btn type='btnPrimaryPurple'\n                        theme={styles}\n                        href={intl.formatMessage({ id: `${props.id}.link` })}\n                        isLink\n                        btnText={intl.formatMessage({ id: \"button.verMas\" })}\n                        ishomepage={props.ishomepage}\n                    />\n                </RightBlock>\n            </ServiceWrapper>\n    )\n}\n\nexport default Service;","import React, {Fragment} from \"react\"\nimport styled from 'styled-components'\nimport { styles, services } from '../content/content.json'\nimport { useIntl } from \"gatsby-plugin-react-intl\"\n\nimport FeaturedService from '../components/modules/FeaturedService'\nimport Button from '../components/common/Button'\nimport Service from '../components/modules/Service'\n\nconst MainWrapper = styled.div`\n  padding-bottom: 187px;\n  ${props => {\n    if (props.ishomepage) {\n        return `\n        padding-bottom: 0;\n        `\n    }\n  }}\n  @media (min-width: ${styles.breakpoints.m}px) {\n    padding-bottom: 243px;\n    ${props => {\n      if (props.ishomepage) {\n          return `\n          padding-bottom: 0;\n          `\n      }\n    }}\n  }\n`\nconst ServicesContainer = styled.div`\n  background-color: ${styles.colors.purpleLight};\n  padding: 40px 20px 200px 20px;\n  ${props => {\n    if (props.ishomepage) {\n        return `\n        padding-bottom: 177px;\n        text-align: center;\n        `\n    }\n  }}\n  @media (min-width: ${styles.breakpoints.m}px) {\n    padding-bottom: 155px;\n    ${props => {\n      if (props.ishomepage) {\n          return `\n          padding-top: 60px;\n          padding-bottom: 220px;\n          `\n      }\n    }}\n  }\n  @media (min-width: ${styles.breakpoints.lpx}) {\n    padding-top: 55px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n`\nconst ServicesWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 946px;\n    justify-content: space-between;\n    margin: auto;\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            display: inline-flex;\n            max-width: unset;\n            flex-wrap: wrap;\n            justify-content: center;\n            max-width: 1102px;\n              gap: 24px;\n              margin-bottom: 34px;\n            @media (min-width: ${styles.breakpoints.m}px) {\n              gap: 56px;\n              margin-bottom: 50px;\n            }\n            @media (min-width: ${styles.breakpoints.xl}px) {\n                justify-content: flex-start;\n            }\n            `\n        }\n    }}\n`\nconst ServicesHomeTitle = styled.h2`\n  flex-basis: 100%;\n  font-size: 2.38em;\n  line-height: 49px;\n  color: ${styles.colors.purplePrimary};\n  margin: 0 auto 25px auto;\n  text-align: center;\n  ${props => {\n      if (props.ishomepage) {\n          return ` \n          margin-bottom: 14px;\n          `\n      }\n  }}\n  @media (min-width: ${styles.breakpoints.m}px) {\n    text-align: left;\n    font-size: 3em;    \n    line-height: 62px;\n    margin-bottom: 40px;\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            text-align: center!important;\n            font-size: 3.33em;    \n            line-height: 62px;\n            margin-bottom: -16px;\n            `\n        }\n    }}\n  }\n`\nconst ServicesTitle = styled.h1`\n  flex-basis: 100%;\n  font-size: 2.38em;\n  line-height: 49px;\n  color: ${styles.colors.purplePrimary};\n  margin: 0 auto 25px auto;\n  text-align: center;\n  @media (min-width: ${styles.breakpoints.m}px) {\n    text-align: left;\n    font-size: 3em;    \n    line-height: 62px;\n    margin-bottom: 40px;\n    ${props => {\n        if (props.ishomepage) {\n            return ` \n            text-align: center!important;\n            `\n        }\n    }}\n  }\n`\nconst Btn = styled(Button)`\n    //display: none;\n    width: max-content;\n    ${props => {\n      if (props.ishomepage) {\n          return `\n          display: flex;\n          margin: 0 auto;\n          @media (min-width: ${styles.breakpoints.m}px) {\n            margin: 35px auto 0 auto;\n          }\n          `\n      }\n    }}\n    @media (min-width: ${styles.breakpoints.m}px) {\n      //display: none;\n      ${props => {\n        if (props.ishomepage) {\n            return `\n            display: flex;\n            margin: 0 auto 15px auto;\n            `\n        }\n      }}\n    }\n`\n\nconst Services = (props) => {\n\n    const intl = useIntl();\n    return (\n      <MainWrapper ishomepage={props.ishomepage}>\n        <ServicesContainer ishomepage={props.ishomepage}>\n          <ServicesWrapper ishomepage={props.ishomepage}>\n            {\n                props.ishomepage ? \n                <ServicesHomeTitle ishomepage={props.ishomepage}>{intl.formatMessage({id: \"services.title\"})}</ServicesHomeTitle>\n                : <ServicesTitle ishomepage={props.ishomepage}>{intl.formatMessage({id: \"services.title\"})}</ServicesTitle>\n            }\n            <Fragment>\n              {services.services.map( (service) =>{\n                return(\n                  <Service \n                    ishomepage={props.ishomepage}\n                    key = {service.id}\n                    image = {service.image} \n                    id = {service.id}\n                    service = {service}\n                    styles = {styles}\n                  >\n                  </Service>\n                )\n              })}\n            </Fragment>\n            {\n                props.ishomepage ? \n                <FeaturedService ishomepage={props.ishomepage}>{intl.formatMessage({id: \"services.title\"})}</FeaturedService>\n                : \"\"\n            }\n          </ServicesWrapper>\n          {\n            props.ishomepage && \n                <Btn\n                  ishomepage={props.ishomepage}\n                  type='btnPrimaryOrange'\n                  theme={styles}\n                  btnText={intl.formatMessage({id: \"services.btnText\"})}\n                  isLink\n                  href=\"servicios\"\n                />\n          }\n        </ServicesContainer>\n        {\n          props.ishomepage ? \n          \"\"\n          : <FeaturedService /> \n        }\n      </MainWrapper>\n  );\n};\n\nexport default Services;"],"names":["Object","defineProperty","exports","value","AnchorLink","_react","_interopRequireDefault","require","_gatsby","_propTypes","_utils","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_ref","to","title","children","className","_ref$stripHash","stripHash","_ref$gatsbyLinkProps","gatsbyLinkProps","onAnchorLinkClick","onClickHandler","handleStrippedLinkClick","handleLinkClick","linkProps","stripHashedLocation","onClick","e","createElement","Link","propTypes","string","isRequired","bool","func","node","get","_AnchorLink","TagsContainer","styled","TagItem","props","type","padding","fontWeight","background","color","getTagStyles","styles","colors","greenLight","regular","ultraDarkGrey","purpleLight","medium","purpleSecondary","tags","tagsType","map","tag","data","FeaturedServiceContainer","white","breakpoints","m","ishomepage","purplePrimary","l","FeaturedServiceLink","FeaturedServiceWrapper","transparent","unset","ImageContainer","FeaturedServiceImage","InfoContainer","FeaturedServiceTitle","orangeMain","FeaturedServiceDescription","darkMainBg","useState","renderLottie","setRenderLottie","pauseAnimation","setPauseAnimation","intl","useIntl","useEffect","animationOptions","loop","autoplay","animationData","capacitacionAnimation","rendererSettings","preserveAspectRatio","onMouseEnter","onMouseLeave","alt","formatMessage","id","options","width","isPaused","onEnter","onLeave","ServiceWrapper","ServiceLink","LeftBlock","RightBlock","TextContainer","ServiceTitle","ServiceDescription","TagsTitle","Tag","Tags","ImageContainerMobile","ServiceImage","BtnMobile","Button","Btn","service","getServiceAnimation","datosAnimation","blockchainAnimation","fullstackAnimation","iaAnimation","acAnimation","getAnimationOptions","theme","image","href","btnText","isLink","MainWrapper","ServicesContainer","ServicesWrapper","ServicesHomeTitle","ServicesTitle","Fragment","services"],"sourceRoot":""}