{"version":3,"file":"c980a69cd7dd5294a318b992fb8e64134239f8db-bae5eb4e1dacc35aa54c.js","mappings":"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","sources":["webpack://fiqus-web/./src/components/common/Tags.js","webpack://fiqus-web/./src/components/modules/FeaturedService.js","webpack://fiqus-web/./src/components/modules/Service.js","webpack://fiqus-web/./src/pages/servicios.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst TagsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-wrap: wrap;\r\n`\r\nconst TagItem = styled.div`\r\n    margin: 0 6px 8px 0px;\r\n    padding: ${props => props.type.padding };\r\n    border-radius: 10px;\r\n    font-size: 14px;\r\n    font-weight: ${props => props.type.fontWeight };\r\n    background-color: ${props => props.type.background };\r\n    color: ${props => props.type.color };\r\n`\r\n\r\nconst Tags = (props) => {\r\n\r\n    const getTagStyles = (type) =>{\r\n        switch (type) {\r\n            case \"labs\" : \r\n                return {\r\n                    background : props.styles.colors.greenLight, \r\n                    fontWeight : props.styles.fontWeight.regular, \r\n                    color : props.styles.colors.ultraDarkGrey,\r\n                    padding : '9px 14px'\r\n                 }\r\n            break\r\n            case \"services\" : \r\n                return {\r\n                    background : props.styles.colors.purpleLight, \r\n                    fontWeight : props.styles.fontWeight.medium, \r\n                    color : props.styles.colors.purpleSecondary,\r\n                    padding : '8px 14px'\r\n                }\r\n            break\r\n            default : \r\n                return {\r\n                    background : props.styles.colors.greenLight, \r\n                    fontWeight : props.styles.fontWeight.regular, \r\n                    color : props.styles.colors.ultraDarkGrey,\r\n                    padding : '8px 14px'\r\n                }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TagsContainer tags={props.tags} type={props.tagsType}>\r\n            {props.tags.map((tag) => {\r\n                return (\r\n                    <TagItem  key = {tag}  type = {getTagStyles(props.tagsType)} styles={props.styles}><p>{ tag }</p></TagItem>\r\n                )}) \r\n            }\r\n        </TagsContainer>\r\n    );\r\n};\r\n\r\nexport default Tags;","import React, {useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport { useIntl, Link } from \"gatsby-plugin-react-intl\"\r\nimport data from '../../content/content.json'\r\nimport Waypoint from 'react-waypoint'\r\nimport Lottie from 'react-lottie'\r\nimport capacitacionAnimation from '../../images/animations/capacitacion.json'\r\n\r\nconst styles = data.styles\r\n\r\nconst FeaturedServiceContainer = styled.div`\r\n    background: ${styles.colors.white};\r\n    position: relative;\r\n    min-height: 253px;\r\n    margin-bottom: 0px;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        min-height: 215px;\r\n        padding: 0 20px;\r\n    }\r\n    \r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            flex-basis: 100%;\r\n            max-width: 320px;\r\n            border-radius: 14px;\r\n            padding: 0px;\r\n            min-height: unset;\r\n            background: ${styles.colors.white};\r\n            margin: 0px;\r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                position: static;\r\n                flex-basis: 50%;\r\n                max-width: 330px;\r\n                min-height: unset;\r\n                width: 100%;\r\n                margin: 0;\r\n                padding: 0;\r\n                border: none;\r\n                box-shadow: none;\r\n                &:hover {\r\n                    outline: solid 3px ${styles.colors.purplePrimary};\r\n                }\r\n            }\r\n            @media (min-width: ${styles.breakpoints.l}px) {\r\n                flex-basis: 33.33%;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst FeaturedServiceLink = styled(Link)`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 18px 20px 22px 20px;\r\n    text-decoration: none;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        padding: 15px 20px 25px 20px;\r\n    }\r\n\r\n`\r\nconst FeaturedServiceWrapper = styled.div`\r\n    position: relative;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto; \r\n    margin-top: -200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 320px;\r\n    padding: 46px 22px 33px 22px;\r\n    background: ${styles.colors.white};\r\n    border: 2px solid ${styles.colors.purplePrimary};\r\n    border-radius: 14px;\r\n    box-shadow: 0px 6px 0px ${styles.colors.purplePrimary};\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        max-width: 946px;\r\n        width: calc(100% - 40px);\r\n        flex-direction: row;\r\n        align-items: flex-start;;\r\n        margin: 87px auto 80px auto;\r\n        margin-top: -155px;\r\n        padding: 0;\r\n        background: ${styles.colors.transparent};\r\n        border: 0;\r\n        box-shadow: none;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            position: static;\r\n            max-width: 320px;\r\n            margin: auto;\r\n            box-shadow: none;\r\n            border: none;\r\n            background: ${styles.colors.unset};\r\n            margin-top: 0px;\r\n            padding: 0px;\r\n            \r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                max-width: unset;\r\n                width: 100%;\r\n                height: 100%;\r\n                box-shadow: none;\r\n                margin: 0;\r\n                border: none;\r\n                background: ${styles.colors.unset};\r\n                flex-direction: column;\r\n                align-items: center;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst ImageContainer = styled.div`\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        position: relative;\r\n        width: 387px;\r\n        max-width: 387px;\r\n        padding: 43px 74px 52px 55px;\r\n        margin-bottom: 50px;\r\n        background: ${styles.colors.white};\r\n        border: 3px solid ${styles.colors.purplePrimary};\r\n        border-radius: 14px;\r\n        box-shadow: 12px 12px 0px ${styles.colors.purplePrimary};\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                position: static;\r\n                width: unset;\r\n                max-width: unset;\r\n                padding: unset;\r\n                margin-bottom: unset;\r\n                background: unset;\r\n                border: none;\r\n                border-radius: unset;\r\n                box-shadow: none;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst FeaturedServiceImage = styled.div`\r\n    max-width: 210px;\r\n    margin-bottom: 27px;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        max-width: 258px;\r\n        margin-bottom: 0;\r\n        margin: 0 auto;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            max-height: 120px;\r\n            max-width: 100%;\r\n            max-height: 160px;\r\n            margin-bottom: 0;\r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                max-height: 175px;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst InfoContainer = styled.div`\r\n    width: unset;\r\n    right: 0;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        position: absolute;\r\n        top: 65px;\r\n        right: 20px;\r\n        z-index: 2;\r\n        width: 100%;\r\n        padding: 49px 47px 44px 47px;\r\n        background: ${styles.colors.white};\r\n        border: 3px solid ${styles.colors.purplePrimary};\r\n        border-radius: 14px;\r\n        box-shadow: 12px 12px 0px ${styles.colors.purplePrimary};\r\n    }\r\n    @media (min-width: ${styles.breakpoints.m}px) and (max-width: 875px) {\r\n        max-width: 450px;\r\n    }\r\n    @media (min-width: 876px) and (max-width: 925px) {\r\n        max-width: 500px;\r\n    }\r\n    @media (min-width: 926px) {\r\n        max-width: 600px;\r\n    }   \r\n    @media (min-width: ${styles.breakpoints.l}px) {\r\n        width: unset;\r\n        padding: 49px 47px 44px 86px;\r\n        right: 0;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                position: static;\r\n                top: unset;\r\n                right: unset;\r\n                z-index: unset;\r\n                width: unset;\r\n                max-width: unset;\r\n                padding: unset;\r\n                background: unset;\r\n                border: none;\r\n                border-radius: unset;\r\n                box-shadow: none;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst FeaturedServiceTitle = styled.h3`\r\n    font-size: 1.44em;\r\n    margin-bottom: 11px;\r\n    color: ${styles.colors.orangeMain};\r\n    text-align: center;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        margin-bottom: 20px;\r\n        font-size: 2.1em;\r\n        text-align: left;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            color: ${styles.colors.purplePrimary};\r\n            margin-bottom: 0;\r\n            margin: 10px 0 0 0;\r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                color: ${styles.colors.purplePrimary};\r\n                font-size: 1.44em;\r\n                text-align: center;\r\n                margin: 10px 0 0 0;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst FeaturedServiceDescription = styled.p`\r\n    max-width: 463px;\r\n    font-size: .88em;\r\n    line-height: 22px;\r\n    color: ${styles.colors.darkMainBg};\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        display: block;\r\n        margin-bottom: auto;\r\n        font-size: 1em;\r\n        line-height: 1.44em;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            display: none;\r\n            margin-left: 0!important;\r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                display: none;\r\n                margin-left: 0!important;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\n\r\nconst FeaturedService = (props) => {\r\n    const [renderLottie, setRenderLottie] = useState(false)\r\n    const intl = useIntl();\r\n\r\n    const animationOptions= {\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: capacitacionAnimation,\r\n        rendererSettings: {\r\n          preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        props.ishome ? \r\n        <FeaturedServiceContainer ishome={props.ishome}> \r\n            <FeaturedServiceWrapper ishome={props.ishome}> \r\n                <FeaturedServiceLink\r\n                    ishome={props.ishome}\r\n                    to='/servicios'\r\n                >\r\n                    <ImageContainer ishome={props.ishome}>\r\n                        <FeaturedServiceImage\r\n                            alt={intl.formatMessage({id: \"service_subsection.featuredServiceImageAlt\"})}\r\n                            ishome={props.ishome}\r\n                        >\r\n                            <Lottie\r\n                                options = {animationOptions}\r\n                                width = \"100%\"\r\n                            />\r\n                        </FeaturedServiceImage>\r\n                    </ImageContainer>\r\n                    <InfoContainer ishome={props.ishome}>\r\n                            <FeaturedServiceTitle ishome={props.ishome}>{intl.formatMessage({id: \"service_subsection.title\"})}</FeaturedServiceTitle>\r\n                            <FeaturedServiceDescription ishome={props.ishome}>{intl.formatMessage({id: \"service_subsection.description\"})}</FeaturedServiceDescription>\r\n                    </InfoContainer>\r\n                </FeaturedServiceLink>\r\n            </FeaturedServiceWrapper>\r\n        </FeaturedServiceContainer>\r\n        :\r\n        <FeaturedServiceContainer ishome={props.ishome}> \r\n            <FeaturedServiceWrapper ishome={props.ishome}> \r\n                <ImageContainer ishome={props.ishome}>\r\n                    <FeaturedServiceImage\r\n                        alt={intl.formatMessage({id: \"service_subsection.featuredServiceImageAlt\"})}\r\n                        ishome={props.ishome}>\r\n                        <Lottie\r\n                            options = {animationOptions}\r\n                            width = \"100%\"\r\n                        />\r\n                    </FeaturedServiceImage>\r\n                </ImageContainer>\r\n                <InfoContainer ishome={props.ishome}>\r\n                        <FeaturedServiceTitle ishome={props.ishome}>{intl.formatMessage({id: \"service_subsection.title\"})}</FeaturedServiceTitle>\r\n                        <FeaturedServiceDescription ishome={props.ishome}>{intl.formatMessage({id: \"service_subsection.description\"})}</FeaturedServiceDescription>\r\n                </InfoContainer>\r\n            </FeaturedServiceWrapper>\r\n        </FeaturedServiceContainer>\r\n    );\r\n};\r\n\r\nexport default FeaturedService;","import React, { useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport data from '../../content/content.json'\r\nimport Tags from '../common/Tags'\r\nimport Button from '../common/Button'\r\nimport { useIntl, Link } from \"gatsby-plugin-react-intl\"\r\nimport Lottie from 'react-lottie';\r\nimport { Waypoint } from 'react-waypoint';\r\n\r\nconst styles = data.styles\r\n\r\nconst ServiceWrapper = styled.div`\r\n    background: ${styles.colors.white};    \r\n    border-radius: 14px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 320px;\r\n    padding: 20px 20px 30px 20px;\r\n    margin-top: 0px;\r\n    margin-bottom: 30px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    min-width: unset;\r\n    flex-basis: 100%;\r\n    &:last-of-type {\r\n        margin-bottom: 61px;\r\n        ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n                margin-bottom: 30px;\r\n                `\r\n        }\r\n    }}\r\n    }\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        flex-direction: row;\r\n        padding: 30px 45px 30px 67px;\r\n        max-width: 946px;\r\n        &:last-of-type {\r\n            margin-bottom: 87px;\r\n        }\r\n    }\r\n    \r\n    ${props => {\r\n        if (props.ishome) {\r\n            return `\r\n            display: flex!important;   \r\n            flex-direction: column!important;\r\n            padding: 0;\r\n            margin-bottom: 0;\r\n            margin: 0;\r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                min-width: 330px;                \r\n                margin-bottom: 50px;\r\n                padding: 0;\r\n                &:last-of-type {\r\n                    margin-bottom: 0px;\r\n                }\r\n                min-width: unset;\r\n                max-width: 330px; \r\n                flex-basis: 50%;\r\n                margin: 0;\r\n                &:hover {\r\n                    outline: solid 3px ${styles.colors.purplePrimary};\r\n                }\r\n                @media (min-width: ${styles.breakpoints.l}px) {\r\n                    flex-basis: 33.33%;\r\n                }\r\n            }\r\n            `\r\n        }\r\n    }}\r\n\r\n`\r\nconst ServiceLink = styled(Link)`\r\n    padding: 18px 20px 22px 20px;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        padding: 15px 20px 25px 20px;\r\n    }\r\n    width: 100%;\r\n    text-decoration: none; \r\n`\r\nconst LeftBlock = styled.div`\r\n    order: 3;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        display: flex;\r\n        order: unset;\r\n        flex-direction: column;\r\n        flex-basis: 45%;\r\n        align-items: flex-start;        \r\n        margin-right: 3px;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return `       \r\n            margin-right: 0px!important;\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst RightBlock = styled.div`\r\n    order: 2;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        display: flex;\r\n        order: unset;\r\n        flex-direction: column;\r\n        flex-basis: 60%;\r\n        margin-left: 40px;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            margin-left: 0!important;\r\n            `\r\n        }\r\n    }}\r\n`\r\n\r\nconst TextContainer = styled.div`\r\n`\r\nconst ServiceTitle = styled.h3`\r\n    font-size: 1.44em;\r\n    color: ${styles.colors.purplePrimary};\r\n    margin: 0px 0px 18px 0;\r\n    text-align: center;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        font-size: 2.11em;\r\n        text-align: left;\r\n        padding-top: 8px;\r\n        margin-top: 0;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            margin-bottom: 0;\r\n            padding-top: 0!important;\r\n            font-size: 1.44em!important;\r\n            text-align: center!important;\r\n            margin-top: 0;\r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                margin-top: 30px!important;\r\n                margin-top: 10px!important;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst ServiceDescription = styled.p`\r\n    font-size: 0.88em;\r\n    line-height: 22px;\r\n    color: ${styles.colors.darkMainBg};\r\n    margin-bottom: 25px;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        font-size: 1em;\r\n        line-height: 26px;\r\n        margin-bottom: auto;\r\n        padding-bottom: 35px;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            display: none;\r\n            `\r\n        }\r\n    }}\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: auto;\r\n    margin-bottom: 15px;\r\n    margin-bottom: 0;\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            display: none!important;\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst TagsTitle = styled.h4`\r\n    font-size: 0.88em;\r\n    color: ${styles.colors.purplePrimary};\r\n    margin-bottom: 23px;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        font-size: 1em;\r\n        line-height: 24px;\r\n        margin-bottom: 15px;\r\n        margin-top: 25px;\r\n    }\r\n`\r\nconst ImageContainer = styled.div`\r\n    display: none;\r\n    max-width: 200px;\r\n    margin: auto;\r\n    order: 1;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        order: unset;\r\n        margin-left: 0;\r\n        margin-right: auto;\r\n        margin-bottom: auto;\r\n        margin-bottom: 0;\r\n        margin-top: 0;\r\n        max-width: 330px;\r\n        width: 100%;\r\n        display: flex;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            margin-left: auto!important;\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst Tag = styled(Tags)`\r\n`\r\n\r\nconst ImageContainerMobile = styled.div`\r\n    display: flex;\r\n    max-width:290px;\r\n    margin: auto;\r\n    order: 1;\r\n    display: flex;\r\n    margin-bottom: 0px;\r\n    margin-top: 0;\r\n    //max-width: unset!important;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        display: none;\r\n        order: unset;\r\n        margin-left: 0;\r\n        margin-right: auto;\r\n        margin-bottom: auto;\r\n        margin-top: 0;\r\n    }\r\n`\r\nconst ServiceImage = styled.div`\r\n    pointer-events: none;\r\n    width: 100%;\r\n    max-height: 170px;\r\n    text-align: center;\r\n\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        max-height: 300px;\r\n        div svg {\r\n            height: auto;\r\n            width: 100%!important;\r\n            max-height: 300px!important;\r\n        }\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return `\r\n            max-height: 160px;\r\n            div {\r\n             height: 100%;\r\n             width: 100%!important;   \r\n            }\r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n                max-height: 134px;\r\n                max-height: 175px;\r\n            }\r\n            div svg {\r\n             width: auto!important;   \r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\n\r\nconst BtnMobile = styled(Button)`\r\n        margin-top: 26px!important;\r\n        display: none;\r\n        display: flex;\r\n        margin-left: 0;\r\n        max-width: max-content;\r\n        /*\r\n        Este componente no se muestra porque todavía no está lista la landing page de cada servicio. \r\n        Cuando estén listas hay que comentar o eliminar únicamente el display none que está debajo de este comentario.\r\n        */\r\n        display: none;\r\n        \r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        display: none;\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            display: none;\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst Btn = styled(Button)`\r\n    display: none;\r\n    max-width: max-content;\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n        margin-top: auto!important;\r\n        margin-bottom: 35px;\r\n        display: flex;\r\n        display: flex;\r\n        /*\r\n        Este componente no se muestra porque todavía no está lista la landing page de cada servicio.\r\n        Cuando estén listas hay que comentar o eliminar únicamente el display none que está debajo de este comentario.\r\n        */\r\n        display: none;\r\n        ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n                display: none;\r\n                `\r\n        }\r\n    }}\r\n    }\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            display: none;\r\n            `\r\n        }\r\n    }}\r\n`\r\n\r\nconst Service = (props) => {\r\n    const [renderLottie, setRenderLottie] = useState(false)\r\n    const service = props.service;\r\n    const intl = useIntl();\r\n    return (\r\n        props.ishome ?\r\n            <ServiceWrapper ishome={props.ishome}>\r\n                <ServiceLink\r\n                    ishome={props.ishome}\r\n                    theme={styles}\r\n                    /*\r\n                    Cuando estén listas las landings individuales de cada servicio hay que descomentar este atributo, comentar el que está debajo (to='servicios') y\r\n                    reemplazar service.link en los archivos de idiomas con el link que corresponda.\r\n                    \r\n                    to={'/' + intl.formatMessage({id: `${props.id}.link`})}\r\n                    */\r\n                    to='/servicios'\r\n                >\r\n                    <ImageContainerMobile>\r\n                        <Waypoint onEnter={() => setRenderLottie(true)} />\r\n                        <ServiceImage\r\n                            ishome={props.ishome}>\r\n                            {renderLottie && <Lottie\r\n                                options={props.animationOptions}\r\n                                width=\"70%\"\r\n                            />}\r\n                        </ServiceImage>\r\n                    </ImageContainerMobile>\r\n                    <LeftBlock ishome={props.ishome}>\r\n                        <ImageContainer ishome={props.ishome}>\r\n                            <Waypoint onEnter={() => setRenderLottie(true)} />\r\n                            <ServiceImage ishome={props.ishome}>\r\n                                {renderLottie && <Lottie\r\n                                    options={props.animationOptions}\r\n                                    width=\"100%\"\r\n                                />}\r\n                            </ServiceImage>\r\n                        </ImageContainer>\r\n                        <TagsContainer ishome={props.ishome}>\r\n                            <TagsTitle>{intl.formatMessage({ id: \"services.tagsTitle\" })}</TagsTitle>\r\n                            <Tag\r\n                                tagsType=\"services\"\r\n                                tags={service.tags}\r\n                                styles={props.styles}\r\n                            />\r\n                        </TagsContainer>\r\n                        <BtnMobile\r\n                            ishome={props.ishome}\r\n                            type='btnPrimaryPurple'\r\n                            theme={styles}\r\n                            //href={intl.formatMessage({id: `${props.id}.link`})}\r\n                            href='servicios'\r\n                            isLink\r\n                            btnText={intl.formatMessage({ id: \"button.verMas\" })}\r\n                        />\r\n                    </LeftBlock>\r\n                    <RightBlock ishome={props.ishome}>\r\n                        <TextContainer>\r\n                            <ServiceTitle ishome={props.ishome}>{intl.formatMessage({ id: `${props.id}.service` })}</ServiceTitle>\r\n                            <ServiceDescription ishome={props.ishome}>{intl.formatMessage({ id: `${props.id}.description` })}</ServiceDescription>\r\n                        </TextContainer>\r\n                        <Btn\r\n                            ishome={props.ishome}\r\n                            type='btnPrimaryPurple'\r\n                            theme={styles}\r\n                            href={intl.formatMessage({ id: `${props.id}.link` })}\r\n                            isLink\r\n                            btnText={intl.formatMessage({ id: \"button.verMas\" })}\r\n                        />\r\n                    </RightBlock>\r\n                </ServiceLink>\r\n            </ServiceWrapper>\r\n            :\r\n            <ServiceWrapper ishome={props.ishome}>\r\n                <Waypoint onEnter={() => setRenderLottie(true)} />\r\n                <ImageContainerMobile>\r\n                    <ServiceImage\r\n                        ishome={props.ishome}>\r\n                        {renderLottie && <Lottie\r\n                            options={props.animationOptions}\r\n                            width=\"70%\"\r\n                        />}\r\n                    </ServiceImage>\r\n                </ImageContainerMobile>\r\n                <LeftBlock>\r\n                    <ImageContainer ishome={props.ishome}>\r\n                        <Waypoint onEnter={() => setRenderLottie(true)} />\r\n                        <ServiceImage\r\n                            ishome={props.ishome}>\r\n                            {renderLottie && <Lottie\r\n                                options={props.animationOptions}\r\n                                width=\"70%\"\r\n                            />}\r\n                        </ServiceImage>\r\n                    </ImageContainer>\r\n                    <TagsContainer ishome={props.ishome}>\r\n                        <TagsTitle>{intl.formatMessage({ id: \"services.tagsTitle\" })}</TagsTitle>\r\n                        <Tag\r\n                            tagsType=\"services\"\r\n                            tags={service.tags}\r\n                            styles={props.styles}\r\n                        />\r\n                    </TagsContainer>\r\n                    <BtnMobile\r\n                        type='btnPrimaryPurple'\r\n                        theme={styles}\r\n                        href={intl.formatMessage({ id: `${props.id}.link` })}\r\n                        btnText={intl.formatMessage({ id: \"button.verMas\" })}\r\n                        ishome={props.ishome}\r\n                        isLink\r\n                    />\r\n                </LeftBlock>\r\n                <RightBlock ishome={props.ishome}>\r\n                    <TextContainer>\r\n                        <ServiceTitle ishome={props.ishome}>{intl.formatMessage({ id: `${props.id}.service` })}</ServiceTitle>\r\n                        <ServiceDescription ishome={props.ishome}>{intl.formatMessage({ id: `${props.id}.description` })}</ServiceDescription>\r\n                    </TextContainer>\r\n                    <Btn type='btnPrimaryPurple'\r\n                        theme={styles}\r\n                        href={intl.formatMessage({ id: `${props.id}.link` })}\r\n                        isLink\r\n                        btnText={intl.formatMessage({ id: \"button.verMas\" })}\r\n                        ishome={props.ishome}\r\n                    />\r\n                </RightBlock>\r\n            </ServiceWrapper>\r\n    )\r\n}\r\n\r\nexport default Service;","import React, {Fragment} from \"react\"\r\nimport styled from 'styled-components'\r\nimport { styles, services } from '../content/content.json'\r\nimport { useIntl } from \"gatsby-plugin-react-intl\"\r\n\r\nimport FeaturedService from '../components/modules/FeaturedService'\r\nimport Button from '../components/common/Button'\r\nimport Service from '../components/modules/Service'\r\n\r\nimport datosAnimation from '../images/animations/datos.json'\r\nimport blockchainAnimation from '../images/animations/blockchain.json'\r\nimport fullstackAnimation from '../images/animations/fullstack.json'\r\nimport iaAnimation from '../images/animations/inteligenciaArtificial.json'\r\nimport acAnimation   from '../images/animations/altaConcurrencia.json'\r\n\r\nconst MainWrapper = styled.div`\r\n  padding-bottom: 187px;\r\n  ${props => {\r\n    if (props.ishome) {\r\n        return `\r\n        padding-bottom: 0;\r\n        `\r\n    }\r\n  }}\r\n  @media (min-width: ${styles.breakpoints.m}px) {\r\n    padding-bottom: 243px;\r\n    ${props => {\r\n      if (props.ishome) {\r\n          return `\r\n          padding-bottom: 0;\r\n          `\r\n      }\r\n    }}\r\n  }\r\n`\r\nconst ServicesContainer = styled.div`\r\n  background-color: ${styles.colors.purpleLight};\r\n  padding: 40px 20px 200px 20px;\r\n  ${props => {\r\n    if (props.ishome) {\r\n        return `\r\n        padding-bottom: 177px;\r\n        text-align: center;\r\n        `\r\n    }\r\n  }}\r\n  @media (min-width: ${styles.breakpoints.m}px) {\r\n    padding-bottom: 155px;\r\n    ${props => {\r\n      if (props.ishome) {\r\n          return `\r\n          padding-top: 60px;\r\n          padding-bottom: 220px;\r\n          `\r\n      }\r\n    }}\r\n  }\r\n  @media (min-width: ${styles.breakpoints.lpx}) {\r\n    padding-top: 55px;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n  }\r\n`\r\nconst ServicesWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    max-width: 946px;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            display: inline-flex;\r\n            max-width: unset;\r\n            flex-wrap: wrap;\r\n            justify-content: center;\r\n            max-width: 1102px;\r\n              gap: 24px;\r\n              margin-bottom: 34px;\r\n            @media (min-width: ${styles.breakpoints.m}px) {\r\n              gap: 56px;\r\n              margin-bottom: 50px;\r\n            }\r\n            @media (min-width: ${styles.breakpoints.xl}px) {\r\n                justify-content: flex-start;\r\n            }\r\n            `\r\n        }\r\n    }}\r\n`\r\nconst ServicesHomeTitle = styled.h2`\r\n  flex-basis: 100%;\r\n  font-size: 2.38em;\r\n  line-height: 49px;\r\n  color: ${styles.colors.purplePrimary};\r\n  margin: 0 auto 25px auto;\r\n  text-align: center;\r\n  ${props => {\r\n      if (props.ishome) {\r\n          return ` \r\n          margin-bottom: 14px;\r\n          `\r\n      }\r\n  }}\r\n  @media (min-width: ${styles.breakpoints.m}px) {\r\n    text-align: left;\r\n    font-size: 3em;    \r\n    line-height: 62px;\r\n    margin-bottom: 40px;\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            text-align: center!important;\r\n            font-size: 3.33em;    \r\n            line-height: 62px;\r\n            margin-bottom: -16px;\r\n            `\r\n        }\r\n    }}\r\n  }\r\n`\r\nconst ServicesTitle = styled.h1`\r\n  flex-basis: 100%;\r\n  font-size: 2.38em;\r\n  line-height: 49px;\r\n  color: ${styles.colors.purplePrimary};\r\n  margin: 0 auto 25px auto;\r\n  text-align: center;\r\n  @media (min-width: ${styles.breakpoints.m}px) {\r\n    text-align: left;\r\n    font-size: 3em;    \r\n    line-height: 62px;\r\n    margin-bottom: 40px;\r\n    ${props => {\r\n        if (props.ishome) {\r\n            return ` \r\n            text-align: center!important;\r\n            `\r\n        }\r\n    }}\r\n  }\r\n`\r\nconst Btn = styled(Button)`\r\n    //display: none;\r\n    width: max-content;\r\n    ${props => {\r\n      if (props.ishome) {\r\n          return `\r\n          display: flex;\r\n          margin: 0 auto;\r\n          @media (min-width: ${styles.breakpoints.m}px) {\r\n            margin: 35px auto 0 auto;\r\n          }\r\n          `\r\n      }\r\n    }}\r\n    @media (min-width: ${styles.breakpoints.m}px) {\r\n      //display: none;\r\n      ${props => {\r\n        if (props.ishome) {\r\n            return `\r\n            display: flex;\r\n            margin: 0 auto 15px auto;\r\n            `\r\n        }\r\n      }}\r\n    }\r\n`\r\n\r\nconst Services = (props) => {\r\n\r\n  const getServiceAnimation = (service) => {\r\n      switch (service) {\r\n        case \"datos\":\r\n          return datosAnimation\r\n          break\r\n        case \"blockchain\":\r\n          return blockchainAnimation\r\n          break\r\n        case \"fullstack\":\r\n          return fullstackAnimation\r\n          break\r\n        case \"inteligenciaArtificial\":\r\n          return iaAnimation\r\n          break\r\n        case \"altaConcurrencia\":\r\n          return acAnimation\r\n          break\r\n      }\r\n    } \r\n  \r\n  const getAnimationOptions = (service) => {\r\n    return {\r\n      loop: false,\r\n      autoplay: true,\r\n      animationData: getServiceAnimation(service),\r\n      rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\"\r\n      }\r\n    }\r\n  }\r\n\r\n    const intl = useIntl();\r\n    return (\r\n      <MainWrapper ishome={props.ishome}>\r\n        <ServicesContainer ishome={props.ishome}>\r\n          <ServicesWrapper ishome={props.ishome}>\r\n            {\r\n                props.ishome ? \r\n                <ServicesHomeTitle ishome={props.ishome}>{intl.formatMessage({id: \"services.title\"})}</ServicesHomeTitle>\r\n                : <ServicesTitle ishome={props.ishome}>{intl.formatMessage({id: \"services.title\"})}</ServicesTitle>\r\n            }\r\n            <Fragment>\r\n              {services.services.map( (service) =>{\r\n                return(\r\n                  <Service \r\n                    ishome={props.ishome}\r\n                    key = {service.id}\r\n                    image = {service.image} \r\n                    animationOptions = {getAnimationOptions(service.image)}\r\n                    id = {service.id}\r\n                    service = {service}\r\n                    styles = {styles}\r\n                  >\r\n                  </Service>\r\n                )\r\n              })}\r\n            </Fragment>\r\n            {\r\n                props.ishome ? \r\n                <FeaturedService ishome={props.ishome}>{intl.formatMessage({id: \"services.title\"})}</FeaturedService>\r\n                : \"\"\r\n            }\r\n          </ServicesWrapper>\r\n          {\r\n            props.ishome && \r\n                <Btn\r\n                  ishome={props.ishome}\r\n                  type='btnPrimaryOrange'\r\n                  theme={styles}\r\n                  btnText={intl.formatMessage({id: \"services.btnText\"})}\r\n                  isLink\r\n                  href=\"servicios\"\r\n                />\r\n          }\r\n        </ServicesContainer>\r\n        {\r\n          props.ishome ? \r\n          \"\"\r\n          : <FeaturedService /> \r\n        }\r\n      </MainWrapper>\r\n  );\r\n};\r\n\r\nexport default Services;"],"names":["TagsContainer","styled","TagItem","props","type","padding","fontWeight","background","color","getTagStyles","styles","colors","greenLight","regular","ultraDarkGrey","purpleLight","medium","purpleSecondary","tags","tagsType","map","tag","key","data","FeaturedServiceContainer","white","breakpoints","m","ishome","purplePrimary","l","FeaturedServiceLink","Link","FeaturedServiceWrapper","transparent","unset","ImageContainer","FeaturedServiceImage","InfoContainer","FeaturedServiceTitle","orangeMain","FeaturedServiceDescription","darkMainBg","useState","intl","useIntl","animationOptions","loop","autoplay","animationData","capacitacionAnimation","rendererSettings","preserveAspectRatio","to","alt","formatMessage","id","options","width","ServiceWrapper","ServiceLink","LeftBlock","RightBlock","TextContainer","ServiceTitle","ServiceDescription","TagsTitle","Tag","Tags","ImageContainerMobile","ServiceImage","BtnMobile","Button","Btn","renderLottie","setRenderLottie","service","theme","onEnter","href","isLink","btnText","MainWrapper","ServicesContainer","ServicesWrapper","ServicesHomeTitle","ServicesTitle","getServiceAnimation","datosAnimation","blockchainAnimation","fullstackAnimation","iaAnimation","acAnimation","getAnimationOptions","Fragment","services","image"],"sourceRoot":""}